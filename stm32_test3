setvbuf(stdout, NULL, _IONBF, 0);
  HAL_UART_Receive_IT(&huart1, Rx_Buffer, 1);
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  if(USART1_rx_end){
	  if(strcmp((const char*)Rx_Buffer,"LED2 ON")==0){
		  HAL_GPIO_WritePin(GPIOE, led2_Pin|led3_Pin, GPIO_PIN_RESET);
	      HAL_GPIO_WritePin(GPIOE, led1_Pin, GPIO_PIN_SET);
	      printf("ACK,LED2 ON\r\n");
	  	  }
	  else if(strcmp((const char*)Rx_Buffer,"LED3 ON")==0){
	  		 HAL_GPIO_WritePin(GPIOE, led1_Pin|led3_Pin, GPIO_PIN_RESET);
	           HAL_GPIO_WritePin(GPIOE, led2_Pin, GPIO_PIN_SET);
	           printf("ACK,LED3 ON\r\n");
	  	  }
	  else if(strcmp((const char*)Rx_Buffer,"LED4 ON")==0){
	  		  HAL_GPIO_WritePin(GPIOE, led1_Pin|led2_Pin, GPIO_PIN_RESET);
	  		  HAL_GPIO_WritePin(GPIOE, led3_Pin, GPIO_PIN_SET);
	  		 printf("ACK,LED4 ON\r\n");
	  	  }
	  else if(strcmp((const char*)Rx_Buffer,"ALL LED ON")==0){
	  		  HAL_GPIO_WritePin(GPIOE, led1_Pin|led2_Pin|led3_Pin, GPIO_PIN_SET);
	  		 printf("ACK,ALL ON\r\n");
	  	  }
	  else if(strcmp((const char*)Rx_Buffer,"ALL LED OFF")==0){
	  		  HAL_GPIO_WritePin(GPIOE, led1_Pin|led2_Pin|led3_Pin, GPIO_PIN_RESET);
	  		 printf("ACK,ALL OFF\r\n");
	  	  }
	  	  USART1_len=0;
          USART1_rx_end=0;
          for(int i=0;i<20;i++)Rx_Buffer[i]=0;
	  }
  }




void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
  static uint8_t usart1_chk=0;
  if(huart -> Instance == USART1)
  {
      USART1_rx_end=0;
      switch(usart1_chk)
      {
          case 0:
            if(Rx_Data[0]==0x02){
                //Rx_Buffer[USART1_len]=Rx_Data[0];
                //USART1_len++;
                usart1_chk=1;
            }
            else usart1_chk=0;
            break;
          case 1:
            if(Rx_Data[0]==0x03){
              USART1_rx_end=1;
              usart1_chk=0;
            }
            else{
            Rx_Buffer[USART1_len]=Rx_Data[0];
            USART1_len++;
            }
            break;
          default :
            usart1_chk=0;
            break;
      }
      HAL_UART_Receive_IT(&huart1, Rx_Data, 1);
  }
}
